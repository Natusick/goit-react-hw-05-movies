{"version":3,"file":"static/js/173.58b409c8.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesInfo/MoviesInfo.module.css?dc86","components/MoviesInfo/MoviesInfo.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.js","services/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesInfo_movieList__kMDpL\",\"movieCard\":\"MoviesInfo_movieCard__zPg0r\",\"movieInfo\":\"MoviesInfo_movieInfo__daZs3\",\"title\":\"MoviesInfo_title__vl8HI\",\"text\":\"MoviesInfo_text__dEFkI\",\"nav\":\"MoviesInfo_nav__KLH3L\",\"active\":\"MoviesInfo_active__LbU5f\",\"inactive\":\"MoviesInfo_inactive__8dint\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./MoviesInfo.module.css\";\r\nimport { NavLink, Outlet } from \"react-router-dom\";\r\nimport { URL_IMG } from \"../../services/Api\";\r\nimport { Suspense } from \"react\";\r\n\r\nexport const MoviesInfo = ({ movies }) => {\r\n  \r\n\r\n  return (\r\n    <div className={s.movieList}>\r\n      {movies && (\r\n        <div>\r\n          <div className={s.movieCard}>\r\n            <img\r\n              src={URL_IMG + movies.poster_path}\r\n              alt={movies.title || movies.name}\r\n              width=\"300\"\r\n            />\r\n            <div className={s.movieInfo}>\r\n              <h2 className={s.title}>{movies.title || movies.name}</h2>\r\n              <p className={s.text}>\r\n                <b>Release date:</b> {movies.release_date}\r\n              </p>\r\n              <p className={s.text}>\r\n                <b>User Score:</b> {movies.vote_average}\r\n              </p>\r\n              <p className={s.text}>\r\n                <b>Genres:</b>{\" \"}\r\n                {movies.genres.map((genr) => genr.name).join(\" / \")}\r\n              </p>\r\n              <p className={s.text}>\r\n                <b>Runtime:</b> {movies.runtime} min.\r\n              </p>\r\n              <p className={s.text}>\r\n                <b>Overview:</b>\r\n              </p>\r\n              <p className={s.text}>{movies.overview}</p>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n         \r\n            <h3>Additional information</h3>\r\n            <nav className={s.nav}>\r\n              <NavLink\r\n                to={\"cast\"}\r\n                className={({ isActive }) =>\r\n                  isActive ? `${s.active}` : `${s.inactive}`\r\n                }\r\n              >\r\n                Cast\r\n              </NavLink>\r\n              <NavLink\r\n                to={\"reviews\"}\r\n                className={({ isActive }) =>\r\n                  isActive ? `${s.active}` : `${s.inactive}`\r\n                }\r\n              >\r\n                Reviews\r\n              </NavLink>\r\n            </nav>\r\n          \r\n          <hr />\r\n        </div>\r\n      )}\r\n      <Suspense fallback={\"Loader\"}>\r\n        <Outlet />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nMoviesInfo.propTypes = {\r\n  movies: PropTypes.shape({\r\n    poster_path: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    name: PropTypes.string,\r\n    release_date: PropTypes.string.isRequired,\r\n    vote_average: PropTypes.number.isRequired,\r\n    genres: PropTypes.array.isRequired,\r\n    runtime: PropTypes.number.isRequired,\r\n    overview: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default MoviesInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"moviePosition\":\"MovieDetails_moviePosition__xKSkv\",\"btn\":\"MovieDetails_btn__LCkCt\"};","import { useState, useEffect } from \"react\";\r\nimport {useLocation, useParams, Link } from \"react-router-dom\";\r\nimport { MoviesInfo } from \"../../components/MoviesInfo/MoviesInfo\";\r\nimport * as getApi from \"../../services/Api\";\r\nimport s from \"./MovieDetails.module.css\";\r\n\r\nexport const MovieDetails = () => {\r\n  const { movieId } = useParams();\r\n  const [movies, setMovies] = useState();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (movieId === '') {\r\n      return;\r\n    }\r\n\r\n    const fetch = async () => {\r\n      try {\r\n        const { data } = await getApi.fetchMovieDetails(movieId);\r\n        setMovies(data);\r\n      } catch (e) {\r\n       console.log('error')\r\n      }\r\n    };\r\n    fetch();\r\n  }, [movieId]);\r\n\r\n  const backLinkHref = location.state?.from ?? \"/movies\";\r\n\r\n  return (\r\n    <div className={s.moviePosition}>\r\n      <Link  className={s.btn} to={backLinkHref}>Go back</Link>\r\n      <MoviesInfo movies={movies} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = 'cd663ecb08f749a7c516ed1131752030'; \r\n\r\nexport const URL_IMG = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nexport const fetchTrending = async () => {\r\n  return await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\r\n  ;\r\n}\r\n\r\nexport const searchMovie = async queryParam => {\r\n  return await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${queryParam}&language=en-US&page=1&include_adult=false`);\r\n}\r\n\r\n\r\nexport const fetchMovieDetails = async movieId => {\r\n return await axios.get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`);\r\n}\r\n\r\nexport const fetchCast = async movieId => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data.cast;\r\n};\r\n\r\nexport const fetchReviews = async movieId => {\r\n const response = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\r\n return response.data.cast;\r\n}\r\n\r\n\r\n\r\n\r\n"],"names":["MoviesInfo","movies","className","s","src","URL_IMG","poster_path","alt","title","name","width","release_date","vote_average","genres","map","genr","join","runtime","overview","to","isActive","Suspense","fallback","MovieDetails","movieId","useParams","useState","setMovies","location","useLocation","useEffect","fetch","getApi","data","console","log","backLinkHref","state","from","BASE_URL","API_KEY","fetchTrending","axios","searchMovie","queryParam","fetchMovieDetails","fetchCast","response","cast","fetchReviews"],"sourceRoot":""}